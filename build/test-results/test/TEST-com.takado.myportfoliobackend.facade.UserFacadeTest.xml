<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.takado.myportfoliobackend.facade.UserFacadeTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2021-10-27T18:40:27" hostname="LAPTOP-LF601L0C" time="0.232">
  <properties/>
  <testcase name="testGetUser()" classname="com.takado.myportfoliobackend.facade.UserFacadeTest" time="0.045"/>
  <testcase name="getAllUsers()" classname="com.takado.myportfoliobackend.facade.UserFacadeTest" time="0.041"/>
  <testcase name="getUser()" classname="com.takado.myportfoliobackend.facade.UserFacadeTest" time="0.031"/>
  <testcase name="ping()" classname="com.takado.myportfoliobackend.facade.UserFacadeTest" time="0.027"/>
  <testcase name="createUser()" classname="com.takado.myportfoliobackend.facade.UserFacadeTest" time="0.044"/>
  <testcase name="deleteUser()" classname="com.takado.myportfoliobackend.facade.UserFacadeTest" time="0.037"/>
  <system-out><![CDATA[2021-10-27 20:40:27.638  INFO 21744 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.takado.myportfoliobackend.facade.UserFacadeTest], using SpringBootContextLoader
2021-10-27 20:40:27.639  INFO 21744 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.takado.myportfoliobackend.facade.UserFacadeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-10-27 20:40:27.639  INFO 21744 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.takado.myportfoliobackend.facade.UserFacadeTest]: UserFacadeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-10-27 20:40:27.641  INFO 21744 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.takado.myportfoliobackend.MyPortfolioBackendApplication for test class com.takado.myportfoliobackend.facade.UserFacadeTest
2021-10-27 20:40:27.643  INFO 21744 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2021-10-27 20:40:27.643  INFO 21744 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@451393a9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c590039, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5b9aac82, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@72cf43fa, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2b1818d1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1f748d43, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1104cc93, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@19dc9dda, org.springframework.test.context.event.EventPublishingTestExecutionListener@72e9c0a0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@494c452b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7e9b68c5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3d41881, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3f04349b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@14ca4b4d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@31b2c451]
Hibernate: select asset0_.id as id1_0_, asset0_.amount as amount2_0_, asset0_.ticker_id as ticker_i4_0_, asset0_.user_id as user_id5_0_, asset0_.value_in as value_in3_0_ from assets asset0_ left outer join users user1_ on asset0_.user_id=user1_.id where user1_.id=?
Hibernate: select user0_.id as id1_2_2_, user0_.displayed_name as displaye2_2_2_, user0_.email as email3_2_2_, user0_.name_hash as name_has4_2_2_, assets1_.user_id as user_id5_0_4_, assets1_.id as id1_0_4_, assets1_.id as id1_0_0_, assets1_.amount as amount2_0_0_, assets1_.ticker_id as ticker_i4_0_0_, assets1_.user_id as user_id5_0_0_, assets1_.value_in as value_in3_0_0_, ticker2_.id as id1_1_1_, ticker2_.coin_id as coin_id2_1_1_, ticker2_.ticker as ticker3_1_1_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into users (displayed_name, email, name_hash, id) values (?, ?, ?, ?)
Hibernate: select user0_.id as id1_2_, user0_.displayed_name as displaye2_2_, user0_.email as email3_2_, user0_.name_hash as name_has4_2_ from users user0_ where user0_.email=?
Hibernate: select assets0_.user_id as user_id5_0_0_, assets0_.id as id1_0_0_, assets0_.id as id1_0_1_, assets0_.amount as amount2_0_1_, assets0_.ticker_id as ticker_i4_0_1_, assets0_.user_id as user_id5_0_1_, assets0_.value_in as value_in3_0_1_, ticker1_.id as id1_1_2_, ticker1_.coin_id as coin_id2_1_2_, ticker1_.ticker as ticker3_1_2_ from assets assets0_ inner join tickers ticker1_ on assets0_.ticker_id=ticker1_.id where assets0_.user_id=?
Hibernate: select user0_.id as id1_2_0_, user0_.displayed_name as displaye2_2_0_, user0_.email as email3_2_0_, user0_.name_hash as name_has4_2_0_, assets1_.user_id as user_id5_0_1_, assets1_.id as id1_0_1_, assets1_.id as id1_0_2_, assets1_.amount as amount2_0_2_, assets1_.ticker_id as ticker_i4_0_2_, assets1_.user_id as user_id5_0_2_, assets1_.value_in as value_in3_0_2_, ticker2_.id as id1_1_3_, ticker2_.coin_id as coin_id2_1_3_, ticker2_.ticker as ticker3_1_3_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: delete from users where id=?
Hibernate: select asset0_.id as id1_0_, asset0_.amount as amount2_0_, asset0_.ticker_id as ticker_i4_0_, asset0_.user_id as user_id5_0_, asset0_.value_in as value_in3_0_ from assets asset0_ left outer join users user1_ on asset0_.user_id=user1_.id where user1_.id=?
Hibernate: select user0_.id as id1_2_2_, user0_.displayed_name as displaye2_2_2_, user0_.email as email3_2_2_, user0_.name_hash as name_has4_2_2_, assets1_.user_id as user_id5_0_4_, assets1_.id as id1_0_4_, assets1_.id as id1_0_0_, assets1_.amount as amount2_0_0_, assets1_.ticker_id as ticker_i4_0_0_, assets1_.user_id as user_id5_0_0_, assets1_.value_in as value_in3_0_0_, ticker2_.id as id1_1_1_, ticker2_.coin_id as coin_id2_1_1_, ticker2_.ticker as ticker3_1_1_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into users (displayed_name, email, name_hash, id) values (?, ?, ?, ?)
Hibernate: select user0_.id as id1_2_, user0_.displayed_name as displaye2_2_, user0_.email as email3_2_, user0_.name_hash as name_has4_2_ from users user0_
Hibernate: select assets0_.user_id as user_id5_0_0_, assets0_.id as id1_0_0_, assets0_.id as id1_0_1_, assets0_.amount as amount2_0_1_, assets0_.ticker_id as ticker_i4_0_1_, assets0_.user_id as user_id5_0_1_, assets0_.value_in as value_in3_0_1_, ticker1_.id as id1_1_2_, ticker1_.coin_id as coin_id2_1_2_, ticker1_.ticker as ticker3_1_2_ from assets assets0_ inner join tickers ticker1_ on assets0_.ticker_id=ticker1_.id where assets0_.user_id=?
Hibernate: select assets0_.user_id as user_id5_0_0_, assets0_.id as id1_0_0_, assets0_.id as id1_0_1_, assets0_.amount as amount2_0_1_, assets0_.ticker_id as ticker_i4_0_1_, assets0_.user_id as user_id5_0_1_, assets0_.value_in as value_in3_0_1_, ticker1_.id as id1_1_2_, ticker1_.coin_id as coin_id2_1_2_, ticker1_.ticker as ticker3_1_2_ from assets assets0_ inner join tickers ticker1_ on assets0_.ticker_id=ticker1_.id where assets0_.user_id=?
Hibernate: select assets0_.user_id as user_id5_0_0_, assets0_.id as id1_0_0_, assets0_.id as id1_0_1_, assets0_.amount as amount2_0_1_, assets0_.ticker_id as ticker_i4_0_1_, assets0_.user_id as user_id5_0_1_, assets0_.value_in as value_in3_0_1_, ticker1_.id as id1_1_2_, ticker1_.coin_id as coin_id2_1_2_, ticker1_.ticker as ticker3_1_2_ from assets assets0_ inner join tickers ticker1_ on assets0_.ticker_id=ticker1_.id where assets0_.user_id=?
Hibernate: select assets0_.ticker_id as ticker_i4_0_0_, assets0_.id as id1_0_0_, assets0_.id as id1_0_1_, assets0_.amount as amount2_0_1_, assets0_.ticker_id as ticker_i4_0_1_, assets0_.user_id as user_id5_0_1_, assets0_.value_in as value_in3_0_1_, user1_.id as id1_2_2_, user1_.displayed_name as displaye2_2_2_, user1_.email as email3_2_2_, user1_.name_hash as name_has4_2_2_ from assets assets0_ left outer join users user1_ on assets0_.user_id=user1_.id where assets0_.ticker_id=?
Hibernate: select assets0_.ticker_id as ticker_i4_0_0_, assets0_.id as id1_0_0_, assets0_.id as id1_0_1_, assets0_.amount as amount2_0_1_, assets0_.ticker_id as ticker_i4_0_1_, assets0_.user_id as user_id5_0_1_, assets0_.value_in as value_in3_0_1_, user1_.id as id1_2_2_, user1_.displayed_name as displaye2_2_2_, user1_.email as email3_2_2_, user1_.name_hash as name_has4_2_2_ from assets assets0_ left outer join users user1_ on assets0_.user_id=user1_.id where assets0_.ticker_id=?
Hibernate: select assets0_.ticker_id as ticker_i4_0_0_, assets0_.id as id1_0_0_, assets0_.id as id1_0_1_, assets0_.amount as amount2_0_1_, assets0_.ticker_id as ticker_i4_0_1_, assets0_.user_id as user_id5_0_1_, assets0_.value_in as value_in3_0_1_, user1_.id as id1_2_2_, user1_.displayed_name as displaye2_2_2_, user1_.email as email3_2_2_, user1_.name_hash as name_has4_2_2_ from assets assets0_ left outer join users user1_ on assets0_.user_id=user1_.id where assets0_.ticker_id=?
Hibernate: select assets0_.ticker_id as ticker_i4_0_0_, assets0_.id as id1_0_0_, assets0_.id as id1_0_1_, assets0_.amount as amount2_0_1_, assets0_.ticker_id as ticker_i4_0_1_, assets0_.user_id as user_id5_0_1_, assets0_.value_in as value_in3_0_1_, user1_.id as id1_2_2_, user1_.displayed_name as displaye2_2_2_, user1_.email as email3_2_2_, user1_.name_hash as name_has4_2_2_ from assets assets0_ left outer join users user1_ on assets0_.user_id=user1_.id where assets0_.ticker_id=?
Hibernate: select user0_.id as id1_2_0_, user0_.displayed_name as displaye2_2_0_, user0_.email as email3_2_0_, user0_.name_hash as name_has4_2_0_, assets1_.user_id as user_id5_0_1_, assets1_.id as id1_0_1_, assets1_.id as id1_0_2_, assets1_.amount as amount2_0_2_, assets1_.ticker_id as ticker_i4_0_2_, assets1_.user_id as user_id5_0_2_, assets1_.value_in as value_in3_0_2_, ticker2_.id as id1_1_3_, ticker2_.coin_id as coin_id2_1_3_, ticker2_.ticker as ticker3_1_3_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: delete from users where id=?
Hibernate: select asset0_.id as id1_0_, asset0_.amount as amount2_0_, asset0_.ticker_id as ticker_i4_0_, asset0_.user_id as user_id5_0_, asset0_.value_in as value_in3_0_ from assets asset0_ left outer join users user1_ on asset0_.user_id=user1_.id where user1_.id=?
Hibernate: select user0_.id as id1_2_2_, user0_.displayed_name as displaye2_2_2_, user0_.email as email3_2_2_, user0_.name_hash as name_has4_2_2_, assets1_.user_id as user_id5_0_4_, assets1_.id as id1_0_4_, assets1_.id as id1_0_0_, assets1_.amount as amount2_0_0_, assets1_.ticker_id as ticker_i4_0_0_, assets1_.user_id as user_id5_0_0_, assets1_.value_in as value_in3_0_0_, ticker2_.id as id1_1_1_, ticker2_.coin_id as coin_id2_1_1_, ticker2_.ticker as ticker3_1_1_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into users (displayed_name, email, name_hash, id) values (?, ?, ?, ?)
Hibernate: select user0_.id as id1_2_0_, user0_.displayed_name as displaye2_2_0_, user0_.email as email3_2_0_, user0_.name_hash as name_has4_2_0_, assets1_.user_id as user_id5_0_1_, assets1_.id as id1_0_1_, assets1_.id as id1_0_2_, assets1_.amount as amount2_0_2_, assets1_.ticker_id as ticker_i4_0_2_, assets1_.user_id as user_id5_0_2_, assets1_.value_in as value_in3_0_2_, ticker2_.id as id1_1_3_, ticker2_.coin_id as coin_id2_1_3_, ticker2_.ticker as ticker3_1_3_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: select user0_.id as id1_2_0_, user0_.displayed_name as displaye2_2_0_, user0_.email as email3_2_0_, user0_.name_hash as name_has4_2_0_, assets1_.user_id as user_id5_0_1_, assets1_.id as id1_0_1_, assets1_.id as id1_0_2_, assets1_.amount as amount2_0_2_, assets1_.ticker_id as ticker_i4_0_2_, assets1_.user_id as user_id5_0_2_, assets1_.value_in as value_in3_0_2_, ticker2_.id as id1_1_3_, ticker2_.coin_id as coin_id2_1_3_, ticker2_.ticker as ticker3_1_3_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: delete from users where id=?
Hibernate: select asset0_.id as id1_0_, asset0_.amount as amount2_0_, asset0_.ticker_id as ticker_i4_0_, asset0_.user_id as user_id5_0_, asset0_.value_in as value_in3_0_ from assets asset0_ left outer join users user1_ on asset0_.user_id=user1_.id where user1_.id=?
Hibernate: select user0_.id as id1_2_2_, user0_.displayed_name as displaye2_2_2_, user0_.email as email3_2_2_, user0_.name_hash as name_has4_2_2_, assets1_.user_id as user_id5_0_4_, assets1_.id as id1_0_4_, assets1_.id as id1_0_0_, assets1_.amount as amount2_0_0_, assets1_.ticker_id as ticker_i4_0_0_, assets1_.user_id as user_id5_0_0_, assets1_.value_in as value_in3_0_0_, ticker2_.id as id1_1_1_, ticker2_.coin_id as coin_id2_1_1_, ticker2_.ticker as ticker3_1_1_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into users (displayed_name, email, name_hash, id) values (?, ?, ?, ?)
Hibernate: select user0_.id as id1_2_0_, user0_.displayed_name as displaye2_2_0_, user0_.email as email3_2_0_, user0_.name_hash as name_has4_2_0_, assets1_.user_id as user_id5_0_1_, assets1_.id as id1_0_1_, assets1_.id as id1_0_2_, assets1_.amount as amount2_0_2_, assets1_.ticker_id as ticker_i4_0_2_, assets1_.user_id as user_id5_0_2_, assets1_.value_in as value_in3_0_2_, ticker2_.id as id1_1_3_, ticker2_.coin_id as coin_id2_1_3_, ticker2_.ticker as ticker3_1_3_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: delete from users where id=?
Hibernate: select asset0_.id as id1_0_, asset0_.amount as amount2_0_, asset0_.ticker_id as ticker_i4_0_, asset0_.user_id as user_id5_0_, asset0_.value_in as value_in3_0_ from assets asset0_ left outer join users user1_ on asset0_.user_id=user1_.id where user1_.id=?
Hibernate: select user0_.id as id1_2_2_, user0_.displayed_name as displaye2_2_2_, user0_.email as email3_2_2_, user0_.name_hash as name_has4_2_2_, assets1_.user_id as user_id5_0_4_, assets1_.id as id1_0_4_, assets1_.id as id1_0_0_, assets1_.amount as amount2_0_0_, assets1_.ticker_id as ticker_i4_0_0_, assets1_.user_id as user_id5_0_0_, assets1_.value_in as value_in3_0_0_, ticker2_.id as id1_1_1_, ticker2_.coin_id as coin_id2_1_1_, ticker2_.ticker as ticker3_1_1_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into users (displayed_name, email, name_hash, id) values (?, ?, ?, ?)
Hibernate: select asset0_.id as id1_0_, asset0_.amount as amount2_0_, asset0_.ticker_id as ticker_i4_0_, asset0_.user_id as user_id5_0_, asset0_.value_in as value_in3_0_ from assets asset0_ left outer join users user1_ on asset0_.user_id=user1_.id where user1_.id=?
Hibernate: select user0_.id as id1_2_2_, user0_.displayed_name as displaye2_2_2_, user0_.email as email3_2_2_, user0_.name_hash as name_has4_2_2_, assets1_.user_id as user_id5_0_4_, assets1_.id as id1_0_4_, assets1_.id as id1_0_0_, assets1_.amount as amount2_0_0_, assets1_.ticker_id as ticker_i4_0_0_, assets1_.user_id as user_id5_0_0_, assets1_.value_in as value_in3_0_0_, ticker2_.id as id1_1_1_, ticker2_.coin_id as coin_id2_1_1_, ticker2_.ticker as ticker3_1_1_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into users (displayed_name, email, name_hash, id) values (?, ?, ?, ?)
Hibernate: select user0_.id as id1_2_0_, user0_.displayed_name as displaye2_2_0_, user0_.email as email3_2_0_, user0_.name_hash as name_has4_2_0_, assets1_.user_id as user_id5_0_1_, assets1_.id as id1_0_1_, assets1_.id as id1_0_2_, assets1_.amount as amount2_0_2_, assets1_.ticker_id as ticker_i4_0_2_, assets1_.user_id as user_id5_0_2_, assets1_.value_in as value_in3_0_2_, ticker2_.id as id1_1_3_, ticker2_.coin_id as coin_id2_1_3_, ticker2_.ticker as ticker3_1_3_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: delete from users where id=?
Hibernate: select asset0_.id as id1_0_, asset0_.amount as amount2_0_, asset0_.ticker_id as ticker_i4_0_, asset0_.user_id as user_id5_0_, asset0_.value_in as value_in3_0_ from assets asset0_ left outer join users user1_ on asset0_.user_id=user1_.id where user1_.id=?
Hibernate: select user0_.id as id1_2_2_, user0_.displayed_name as displaye2_2_2_, user0_.email as email3_2_2_, user0_.name_hash as name_has4_2_2_, assets1_.user_id as user_id5_0_4_, assets1_.id as id1_0_4_, assets1_.id as id1_0_0_, assets1_.amount as amount2_0_0_, assets1_.ticker_id as ticker_i4_0_0_, assets1_.user_id as user_id5_0_0_, assets1_.value_in as value_in3_0_0_, ticker2_.id as id1_1_1_, ticker2_.coin_id as coin_id2_1_1_, ticker2_.ticker as ticker3_1_1_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into users (displayed_name, email, name_hash, id) values (?, ?, ?, ?)
Hibernate: select user0_.id as id1_2_0_, user0_.displayed_name as displaye2_2_0_, user0_.email as email3_2_0_, user0_.name_hash as name_has4_2_0_, assets1_.user_id as user_id5_0_1_, assets1_.id as id1_0_1_, assets1_.id as id1_0_2_, assets1_.amount as amount2_0_2_, assets1_.ticker_id as ticker_i4_0_2_, assets1_.user_id as user_id5_0_2_, assets1_.value_in as value_in3_0_2_, ticker2_.id as id1_1_3_, ticker2_.coin_id as coin_id2_1_3_, ticker2_.ticker as ticker3_1_3_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: delete from users where id=?
Hibernate: select user0_.id as id1_2_0_, user0_.displayed_name as displaye2_2_0_, user0_.email as email3_2_0_, user0_.name_hash as name_has4_2_0_, assets1_.user_id as user_id5_0_1_, assets1_.id as id1_0_1_, assets1_.id as id1_0_2_, assets1_.amount as amount2_0_2_, assets1_.ticker_id as ticker_i4_0_2_, assets1_.user_id as user_id5_0_2_, assets1_.value_in as value_in3_0_2_, ticker2_.id as id1_1_3_, ticker2_.coin_id as coin_id2_1_3_, ticker2_.ticker as ticker3_1_3_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
Hibernate: select user0_.id as id1_2_0_, user0_.displayed_name as displaye2_2_0_, user0_.email as email3_2_0_, user0_.name_hash as name_has4_2_0_, assets1_.user_id as user_id5_0_1_, assets1_.id as id1_0_1_, assets1_.id as id1_0_2_, assets1_.amount as amount2_0_2_, assets1_.ticker_id as ticker_i4_0_2_, assets1_.user_id as user_id5_0_2_, assets1_.value_in as value_in3_0_2_, ticker2_.id as id1_1_3_, ticker2_.coin_id as coin_id2_1_3_, ticker2_.ticker as ticker3_1_3_ from users user0_ left outer join assets assets1_ on user0_.id=assets1_.user_id left outer join tickers ticker2_ on assets1_.ticker_id=ticker2_.id where user0_.id=?
No class com.takado.myportfoliobackend.domain.User entity with id 279 exists!
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
